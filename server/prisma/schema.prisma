// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//buena
model Usuario {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  nombre            String? //Puede ser nulo
  primerApellido    String? //Puede ser nulo
  segundoApellido   String? //Puede ser nulo
  rol               Role                @default(USER)
  contrasenna       String?
  identificacion    String?
  estado            Int                 @default(1)
  ordenes           Orden[]
  direcciones       Direccion[]
  metodosPago       MetodoPago[]
  consultaProductos ConsultaProductos[]
  evaluaciones     Evaluacion[]
}

//buena
model Orden {
  id               Int            @id @default(autoincrement())
  fechaOrden       DateTime       @default(now())
  estado           Int            @default(1)
  direccionEntrega Int
  direccion        Direccion      @relation(fields: [direccionEntrega], references: [id])
  metodoPagoId     Int
  metodoPago       MetodoPago     @relation(fields: [metodoPagoId], references: [id])
  usuarioId        Int
  usuario          Usuario        @relation(fields: [usuarioId], references: [id])
  ordenProductos   OrdenDetalle[]
  evaluaciones     Evaluacion[]
}

//buena
model OrdenDetalle {
  id         Int      @id @default(autoincrement())
  cantidad   Int?
  iva        Decimal?
  subtotal   Decimal?
  total      Decimal?
  ordenId    Int
  orden      Orden    @relation(fields: [ordenId], references: [id])
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id])
}

//Buena
model Categoria {
  id              Int        @id @default(autoincrement())
  nombreCategoria String
  productos       Producto[]
}

//buena
model Producto {
  id                 Int                 @id @default(autoincrement())
  nombreProducto     String
  precio             Decimal
  descripcion        String
  cantidadDisponible Int
  estado             Int                 @default(1) //1=InStock 0=No hay stock
  ordenProductos     OrdenDetalle[]
  categoriaId        Int
  categoria          Categoria           @relation(fields: [categoriaId], references: [id])
  fotografias        Fotografia[]
  consultaProductos  ConsultaProductos[]
}

//buena
model Fotografia {
  id         Int      @id @default(autoincrement())
  imagen     Bytes?
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id])
}

//buena
model MetodoPago {
  id          Int     @id @default(autoincrement())
  descripcion String
  usuarioId   Int
  usuario     Usuario @relation(fields: [usuarioId], references: [id])
  ordenes     Orden[]
}

//buena
model Direccion {
  id          Int     @id @default(autoincrement())
  provincia   String?
  canton      String?
  distrito    String?
  barrio      String?
  otrasSennas String?
  usuarioId   Int
  usuario     Usuario @relation(fields: [usuarioId], references: [id])
  ordenes     Orden[]
}

//buena
model ConsultaProductos {
  id         Int      @id @default(autoincrement())
  mensaje    String?
  respuesta  String?
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id])
  usuarioId  Int
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}
//buena
model Evaluacion {
  id         Int      @id @default(autoincrement())
  comentario    String?
  calificacionFinal Int
  usuarioId  Int
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  ordenId Int
  orden   Orden @relation(fields: [ordenId], references: [id])
}

enum Role {
  USER
  ADMIN
  SALES
}
